apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    k10.kasten.io/sc-supports-block-mode-exports: "true"
  name: ebs-sc-block  
parameters:
  encrypted: "false"
provisioner: ebs.csi.aws.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-calibrate-10k-10k-block  
spec: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workload-calibrate-1
  namespace: test-calibrate-10k-10k-block
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload-calibrate-1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: workload-calibrate-1
    spec:
      containers:
      - command:
        - sh
        - -c
        - |
          mkfs.ext4  /dev/blockdata
          mkdir /data
          mount -t ext4 /dev/blockdata  /data          
          cd /data
          # create initial data 
          if [ ! -f initial ]
          then            
            for j in $(seq 1 25)
            do 
              for i in $(seq 1 400); do dd if=/dev/urandom of=$i.v$j.bin bs=10K count=1; echo "created $i.v$j.bin"; done
            done
            # all the initial filesystem is created we mark it
            # by creating an initial file if the pod restart it won't try to 
            touch initial
          fi 
          # implement churn rate notice the & 
          # at the end of the second for-loop 
          # this is to let the files renew happen during the sleep of 10 hours
          while true 
          do 
            for j in $(seq 1 5)
            do 
              for i in $(seq 1 400); do dd if=/dev/urandom of=$i.v$j.bin bs=10K count=1; echo "created $i.v$j.bin"; done &
            done
            sleep 36000
          done
        image: docker.io/ubuntu:latest
        imagePullPolicy: IfNotPresent
        securityContext: 
          privileged: true
        name: workload-calibrate-1-container
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        volumeDevices:
        - devicePath: /dev/blockdata
          name: data      
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: calibrate-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: calibrate-1
  namespace: test-calibrate-10k-10k-block
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Block
  resources:
    requests:
      storage: 28Gi
  storageClassName: ebs-sc-block